apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'project-report'


group = 'edu.mype'
version = '1.0-SNAPSHOT'

description = "Prismatic Android client"

sourceCompatibility = 1.7
targetCompatibility = 1.7




repositories {
    mavenCentral()
}

dependencies {
    compile 'org.glassfish.jersey.core:jersey-client:2.4'
    compile 'org.glassfish.jersey.connectors:jersey-apache-connector:2.4'
    compile 'com.sun.jersey:jersey-json:1.8'
    compile 'org.glassfish.jersey.media:jersey-media-json-processing:2.4'
    compile 'org.codehaus.jettison:jettison:1.3.2'
    compile 'commons-lang:commons-lang:2.6'
    compile 'org.slf4j:slf4j-api:1.7.5'
    compile 'ch.qos.logback:logback-classic:1.0.13'

    compile 'com.google.inject:guice:4.0-beta'


    testCompile 'junit:junit:4.11'
    testCompile 'org.easytesting:fest-assert-core:2.0M10'
    testCompile 'org.mockito:mockito-all:1.9.5'
}


idea {

    //if you want parts of paths in resulting files (*.iml, etc.) to be replaced by variables (Files)
//    pathVariables GRADLE_HOME: file('~/cool-software/gradle')

    module {
        //if for some reason you want to add an extra sourceDirs
        sourceDirs += file('src/main/java')

        //and some extra test source dirs
        testSourceDirs += file('src/test/java')

        //and some extra dirs that should be excluded by IDEA
        excludeDirs += file('build')// + file('target')

        //if you don't like the name Gradle has chosen
        name = 'PrismAndr'

        //if you prefer different output folders
        inheritOutputDirs = false
        outputDir = file('build/classes')
        testOutputDir = file('build/test-classes')

        //if you prefer different SDK than that inherited from IDEA project
        jdkName = '1.7'

        //if you need to put 'provided' dependencies on the classpath
        //scopes.PROVIDED.plus += configurations.provided

        //if 'content root' (as IDEA calls it) of the module is different
//        contentRoot = file('my-module-content-root')

        //if you love browsing Javadoc
        downloadJavadoc = true

        //and hate reading sources :)
        downloadSources = true
    }
}